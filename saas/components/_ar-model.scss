
$color-black: #000000;
$color-white: #ffffff;
$color-blue: #4285f4;
$color-grey-border: #DADCE0;
$color-grey-background: #E8EAED;
$color-shadow: rgba(0, 0, 0, 0.25);
$color-shadow-dark: rgba(0, 0, 0, 0.5);
$color-shadow-darker: rgba(0, 0, 0, 0.6);
$color-text: rgba(0, 0, 0, 0.8);



// Border radius values
$border-radius-large: 32px;
$border-radius-medium: 25px;
$border-radius-small: 4px;

// Transition default time
$transition-default: 0.3s;

// Mixins for common patterns
@mixin box-shadow($color) {
  box-shadow: 0 2px 4px $color;
}

@mixin center-absolute {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

// Base styles
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  height: 100%;
  background-color: $color-black;
  color: $color-white;
  scroll-behavior: smooth;
}

body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  background-color: $color-black;
}

:not(:defined) > * {
  display: none;
}

model-viewer {
  width: 100%;
  height: 90%;
  background-color: $color-black;
}

// Hotspot styles using nesting
.Hotspot {
  @include box-shadow($color-shadow);
  background: $color-white;
  border-radius: $border-radius-large;
  border: 0;
  cursor: pointer;
  height: 24px;
  padding: 8px;
  position: relative;
  transition: opacity $transition-default;
  width: 24px;

  &:not([data-visible]) {
    background: transparent;
    border: 4px solid $color-white;
    box-shadow: none;
    height: 32px;
    pointer-events: none;
    width: 32px;
  }

  &:focus {
    border: 4px solid $color-blue;
    outline: none;
    height: 32px;
    width: 32px;
  }

  > * {
    opacity: 1;
    transform: translateY(-50%);
  }

  &:not([data-visible]) > * {
    opacity: 0;
    pointer-events: none;
    transform: translateY(calc(-50% + 4px));
    transition: transform $transition-default, opacity $transition-default;
  }
}

.HotspotAnnotation {
  @include box-shadow($color-shadow);
  background: $color-white;
  border-radius: $border-radius-small;
  color: $color-text;
  display: block;
  font-family: $font-family-futura;
  font-size: 18px;
  font-weight: 700;
  left: calc(100% + 1em);
  max-width: 128px;
  overflow-wrap: break-word;
  padding: 0.5em 1em;
  position: absolute;
  top: 50%;
  width: max-content;
}

// Progress bar styles
.progress-bar {
  display: block;
  width: 33%;
  height: 10%;
  max-height: 2%;
  @include center-absolute;
  top: 50%;
  border-radius: $border-radius-medium;
  box-shadow: 0px 3px 10px 3px $color-shadow-dark, 0px 0px 5px 1px $color-shadow-darker;
  border: 1px solid $color-white;
  background-color: $color-shadow-darker;

  &.hide {
    visibility: hidden;
    transition: visibility $transition-default;
  }
}

.update-bar {
  background-color: $color-white;
  width: 0%;
  height: 100%;
  border-radius: $border-radius-medium;
  float: left;
  transition: width $transition-default;
}

// AR button styles
#ar-button {
  @include center-absolute;
  background-image: url('ar_icon.png');
  background-repeat: no-repeat;
  background-size: 20px 20px;
  background-position: 12px 50%;
  background-color: $color-white;
  white-space: nowrap;
  bottom: 16px;
  padding: 0 16px 0 40px;
  font-family: $font-family-default;
  font-size: 14px;
  color: $color-blue;
  height: 36px;
  line-height: 36px;
  border-radius: 18px;
  border: 1px solid $color-grey-border;

  &:active {
    background-color: $color-grey-background;
  }

  &:focus {
    outline: none;
  }

  &:focus-visible {
    outline: 1px solid $color-blue;
  }
}

// Animations using keyframes
@keyframes circle {
  from {
    transform: translateX(-50%) rotate(0deg) translateX(50px) rotate(0deg);
  }
  to {
    transform: translateX(-50%) rotate(360deg) translateX(50px) rotate(-360deg);
  }
}

@keyframes elongate {
  from {
    transform: translateX(100px);
  }
  to {
    transform: translateX(-100px);
  }
}

// Animations applied to model-viewer elements
model-viewer > #ar-prompt {
  position: absolute;
  left: 50%;
  bottom: 60px;
  animation: elongate 2s infinite ease-in-out alternate;
  display: none;
}

model-viewer[ar-status="session-started"] > #ar-prompt {
  display: block;
}

model-viewer > #ar-prompt > img {
  animation: circle 4s linear infinite;
}
